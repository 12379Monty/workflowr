% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wflow_start.R
\name{wflow_start}
\alias{wflow_start}
\title{Start a new workflowr project}
\usage{
wflow_start(directory, name = NULL, git = TRUE, existing = FALSE,
  overwrite = FALSE, change_wd = TRUE, dry_run = FALSE,
  user.name = NULL, user.email = NULL)
}
\arguments{
\item{directory}{character. The directory for the project, e.g.
"~/new-project". When \code{existing = FALSE}, the directory will
be created.}

\item{name}{character (default: NULL). Project name, e.g. "My Project". When
\code{name = NULL}, the project name is automatically set based on the
argument \code{directory}. For example, if \code{directory =
"~/projects/myproject"}, then \code{name} is set to \code{"myproject"}.
\code{name} is displayed on the site's navigation bar and the README.md.}

\item{git}{logical (default: TRUE). Should the workflowr files be committed
with Git? If no Git repository is detected, \code{wflow_start} will
initialize the repository and make an initial commit. If there is already a
Git repository, \code{wflow_start} will make an additional commit. In both
cases, only files needed for the workflowr project will be included in the
commit.}

\item{existing}{logical (default: FALSE). Indicate if the specified
\code{directory} already exists. The default prevents injecting the
workflowr files into an unwanted location. Only set to TRUE if you wish to
add the workflowr files to an existing project.}

\item{overwrite}{logical (default: FALSE). Control whether to overwrite
existing files that have the same names as the workflowr files. Only
relevant if \code{existing = TRUE}. Even if \code{overwrite = FALSE},
existing files that have the same names as the workflowr files will still
be committed if \code{git = TRUE}.}

\item{change_wd}{logical (default: TRUE). Change the working directory to the
\code{directory}.}

\item{dry_run}{logical (default: FALSE). Preview the actions to be performed
without executing them.}

\item{user.name}{character (default: NULL). The user name used by Git to sign
commits, e.g. "My Name". This setting will only apply to this specific
workflowr project being created. To create a global Git user name to be the
default for this computer, instead use \code{\link{wflow_git_config}}.}

\item{user.email}{character (default: NULL). The email addresse used by Git
to sign commits, e.g. "email@domain". This setting will only apply to this
specific workflowr project being created. To create a global Git email
address to be the default for this computer, instead use
\code{\link{wflow_git_config}}.}
}
\value{
An object of class \code{wflow_start}, which is a list with the
  following elements:

 \itemize{

   \item \bold{directory}: The input argument \code{directory}

   \item \bold{name}: The input argument \code{name}

   \item \bold{git}: The input argument \code{git}

   \item \bold{existing}: The input argument \code{existing}

   \item \bold{overwrite}: The input argument \code{overwrite}

   \item \bold{change_wd}: The input argument \code{change_wd}

   \item \bold{dry_run}: The input argument \code{dry_run}

   \item \bold{user.name}: The input argument \code{user.name}

   \item \bold{user.email}: The input argument \code{user.email}

   \item \bold{commit}: The \code{\link[git2r]{git_commit-class}} object
   returned by \link{git2r} (\code{NULL} if \code{git = FALSE}).

 }
}
\description{
\code{wflow_start} creates a minimal workflowr project. The default
behaviour is to add these files to a new directory, but it is also
possible to populate an already existing project. By default, it
also changes the working directory to the workflowr project.
}
\details{
This is the initial function that organizes the infrastructure to create a
research website for your project. If you're using RStudio, you can
alternatively create a new workflowr project using the RStudio project
template. Go to "File" -> "New Project..." and select "workflowr project"
from the list of project types. In the future you can return to your project
by choosing "Open Project...". This will set the correct working directory in
the R console, switch the file navigator to the project, and configure the
Git pane. Note that while you do not need to use RStudio with workflowr, do
not delete the Rproj file because it is required by other functions.

\code{wflow_start} populates the directory with the following files:

\preformatted{
├── .gitignore
├── .Rprofile
├── _workflowr.yml
├── analysis/
│   ├── about.Rmd
│   ├── index.Rmd
│   ├── license.Rmd
│   └── _site.yml
├── code/
│   ├── README.md
├── data/
│   └── README.md
├── docs/
├── directory.Rproj
├── output/
│   └── README.md
└── README.md
}

The two \bold{required} subdirectories are \code{analysis/} and \code{docs/}.
These directories should never be removed from the workflowr project.

\code{analysis/} contains all the source R Markdown files for implementing
the data analyses for your project. It also contains a special R Markdown
file, \code{index.Rmd}, that does not contain any R code, but will be used to
generate \code{index.html}, the homepage for your website. In addition, this
directory contains the important configuration files \code{_site.yml}, which
you can use to edit the theme, navigation bar, and other website aesthetics.
Do not delete \code{index.Rmd} or \code{_site.yml}.

\code{docs/} contains all the HTML files for your website. The HTML files are
built from the R Markdown files in \code{analysis/}. Furthermore, any figures
created by the R Markdown files are saved here. Each of these figures is
saved according to the following pattern: \code{docs/figure/<insert Rmd
filename>/<insert chunk name>-#.png}, where \code{#} corresponds to which of
the plots the chunk generated (since one chunk can produce an arbitrary
number of plots).

The workflowr-specific configuration file is \code{_workflowr.yml}. It will
apply the workflowr reproducibility checks consistently across all your R
Markdown files. The most critical setting is \code{knit_root_dir}, which
determines the directory where the files in \code{analysis/} will be
executed. The default is to execute the code in the root of the project where
\code{_workflowr.yml} is located (i.e. \code{"."}). To instead execute the
code from \code{analysis/}, change the setting to \code{knit_root_dir:
"analysis"}. See \code{\link{wflow_html}} for more details.

Also required is the RStudio project file, in the example
above\code{directory.Rproj}. Even if you are not using RStudio, do not delete
this file because the workflowr functions rely on it to determine the root
directory of the project.

The \bold{optional} directories are \code{data/}, \code{code/}, and
\code{output/}. These directories are suggestions for organizing your data
analysis project, but can be removed if you do not find them useful.

\code{data/} is a directory for raw data files.

\code{code/} is a directory for code that might not be appropriate to include
in R Markdown format (e.g. for pre-processing the data, or for long-running
code).

\code{output/} is a directory for processed data files and other outputs
generated from the code and data. For example, scripts in \code{code/} that
pre-process raw data files from \code{data/} should save the processed data
files in \code{output/}.

The \code{.Rprofile} file is a regular R script that is run once when the
project is opened. It contains the call \code{library("workflowr")}, ensuring
that workflowr is loaded automatically each time a workflowr-project is
opened.
}
\examples{
\dontrun{

wflow_start("path/to/new-project")

# Provide a custom name for the project.
wflow_start("path/to/new-project", name = "My Project")

# Preview what wflow_start would do
wflow_start("path/to/new-project", dry_run = TRUE)

# Add workflowr files to an existing project.
wflow_start("path/to/current-project", existing = TRUE)

# Add workflowr files to an existing project, but do not automatically
# commit them.
wflow_start("path/to/current-project", git = FALSE, existing = TRUE)
}
}
\seealso{
vignette("wflow-01-getting-started")
}
