% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_site.R
\name{make_site}
\alias{make_site}
\title{Render only the updated R Markdown files}
\usage{
make_site(dry_run = FALSE, path = ".", ...)
}
\arguments{
\item{dry_run}{Identifies R Markdown files that have been updated, but does
not render them.}

\item{path}{By default the function assumes the current working directory is
within the project. If this is not true, you'll need to provide the path to
the project directory.}

\item{...}{Additional arguments that can be passed to
\code{rmarkdown::render_site}. Should only be needed for testing potential
changes. Any permanent settings should be specified in
\code{analysis/_site.yml}.}
}
\value{
If \code{dry_run = TRUE}, returns the character vector of R Markdown
  files that would be rendered. Otherwise invisibly returns this vector.
}
\description{
\code{make_site} provides Makefile-like functionality to render only the R
Markdown files that have been modified. This is in contrast to
\code{rmarkdown::render_site}, which always renders all the pages. You should
use the latter if you've made aesthetic changes that you want applied to all
the R Markdown files.
}
\details{
Under the hood, this runs \code{rmarkdown::render_site} on each updated file
individually. This provides all the website styling (which you would lose if
you ran \code{rmarkdown::render}) without re-building the entire site (which
would happen if you ran \code{rmarkdown::render_site with no arguments}).
}
\examples{
\dontrun{
make_site()
}
}

